openapi: 3.0.0
info:
  title: Gemini API Proxy
  description: |
    Cloudflare Worker proxy for Google Gemini API with R2 file upload support.

    This API provides three main functionalities:
    - `/generate` for text and vision requests to Gemini
    - `/upload` for file uploads to R2 and Gemini Files API
    - `/r2/*` for direct R2 bucket operations
  version: 1.0.0
servers:
  - url: https://heal-spur-2025.anthonyhana04.workers.dev/
    description: Production server
  - url: http://localhost:8787
    description: Local development server

paths:
  /generate:
    post:
      summary: Generate content using Gemini
      description: Proxy a text or vision request to Gemini API
      operationId: generateContent
      tags:
        - Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TextRequest'
                - $ref: '#/components/schemas/ImageRequest'
            examples:
              text:
                summary: Text-only request
                value:
                  contents:
                    - parts:
                        - text: "What is the capital of France?"
              image:
                summary: Vision request with image
                value:
                  contents:
                    - parts:
                        - text: "What's in this image?"
                        - inlineData:
                            data: "base64_encoded_image_data"
                            mimeType: "image/jpeg"
      responses:
        '200':
          description: Successful response from Gemini
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method not allowed
          content:
            text/plain:
              schema:
                type: string
                example: "Method not allowed"

  /upload:
    post:
      summary: Upload file to R2 and Gemini
      description: |
        Upload a file to Cloudflare R2 storage and forward it to Gemini Files API.
        The file will be stored in R2 and registered with Gemini for future use.
      operationId: uploadFile
      tags:
        - File Upload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadRequest'
            example:
              fileName: "image.jpg"
              mimeType: "image/jpeg"
              data: "base64_encoded_file_data"
              displayName: "My vacation photo"
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /r2/{key}:
    parameters:
      - name: key
        in: path
        required: true
        description: The key (filename) in the R2 bucket
        schema:
          type: string
    get:
      summary: Get file from R2
      description: Retrieve a file from the R2 bucket
      operationId: getR2Object
      tags:
        - R2 Operations
      responses:
        '200':
          description: File retrieved successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: File not found
          content:
            text/plain:
              schema:
                type: string
                example: "Object Not Found"
    put:
      summary: Upload file to R2
      description: Upload a file directly to the R2 bucket
      operationId: putR2Object
      tags:
        - R2 Operations
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: File uploaded successfully
          content:
            text/plain:
              schema:
                type: string
                example: "Put example.jpg successfully!"
    delete:
      summary: Delete file from R2
      description: Delete a file from the R2 bucket
      operationId: deleteR2Object
      tags:
        - R2 Operations
      responses:
        '200':
          description: File deleted successfully
          content:
            text/plain:
              schema:
                type: string
                example: "Deleted!"
        '404':
          description: File not found
          content:
            text/plain:
              schema:
                type: string
                example: "Object Not Found"

components:
  schemas:
    TextRequest:
      type: object
      required:
        - contents
      properties:
        contents:
          type: array
          items:
            type: object
            required:
              - parts
            properties:
              parts:
                type: array
                items:
                  type: object
                  required:
                    - text
                  properties:
                    text:
                      type: string

    ImageRequest:
      type: object
      required:
        - contents
      properties:
        contents:
          type: array
          items:
            type: object
            required:
              - parts
            properties:
              parts:
                type: array
                items:
                  oneOf:
                    - type: object
                      required:
                        - text
                      properties:
                        text:
                          type: string
                    - type: object
                      required:
                        - inlineData
                      properties:
                        inlineData:
                          type: object
                          required:
                            - data
                            - mimeType
                          properties:
                            data:
                              type: string
                              description: Base64 encoded image data
                            mimeType:
                              type: string
                              example: "image/jpeg"

    UploadRequest:
      type: object
      required:
        - fileName
        - mimeType
        - data
      properties:
        fileName:
          type: string
          description: Original name of the file
        mimeType:
          type: string
          description: MIME type of the file
        data:
          type: string
          description: Base64 encoded file content
        displayName:
          type: string
          description: Optional human-readable name for the file

    UploadResponse:
      type: object
      required:
        - file
        - r2Key
      properties:
        file:
          type: object
          description: Gemini File object
          properties:
            name:
              type: string
            uri:
              type: string
            mimeType:
              type: string
        r2Key:
          type: string
          description: Key used to store the file in R2

    GenerateResponse:
      type: object
      properties:
        text:
          type: string
          description: Generated text response from Gemini

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
