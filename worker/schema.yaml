openapi: 3.0.3
info:
  title: Cloudflare Worker Chat API
  version: 1.0.0
  description: API for user registration, authentication, room management, and messaging with image support
servers:
  - url: http://localhost:8787
    description: Local development server
paths:
  /api/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username: { type: string, example: testuser }
                password: { type: string, example: password123 }
      responses:
        '201':
          description: User registered successfully
          content:
            text/plain:
              schema:
                type: string
                example: User testuser registered successfully
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
  /api/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username: { type: string, example: testuser }
                password: { type: string, example: password123 }
      responses:
        '200':
          description: Login successful
          headers:
            Set-Cookie:
              schema:
                type: string
                example: sessionId=mock-session-id; HttpOnly; Secure; SameSite=Strict
          content:
            text/plain:
              schema:
                type: string
                example: 'Login successful, session ID: mock-session-id'
        '401':
          description: Invalid credentials
          content:
            text/plain:
              schema:
                type: string
                example: Invalid credentials
        '404':
          description: User not found
          content:
            text/plain:
              schema:
                type: string
                example: User not found
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
  /api/logout:
    post:
      summary: Log out a user
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Logout successful
          headers:
            Set-Cookie:
              schema:
                type: string
                example: sessionId=; HttpOnly; Secure; SameSite=Strict; Max-Age=0
          content:
            text/plain:
              schema:
                type: string
                example: Logout successful
        '401':
          description: Not logged in
          content:
            text/plain:
              schema:
                type: string
                example: Not logged in
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
  /api/room:
    get:
      summary: Get a specific room
      security:
        - cookieAuth: []
      parameters:
        - name: roomId
          in: query
          required: true
          schema:
            type: string
            example: mock-uuid
      responses:
        '200':
          description: Room retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  roomId: { type: string, example: mock-uuid }
                  name: { type: string, example: Test Room }
                  owner: { type: string, example: testuser }
        '400':
          description: Room ID is required
          content:
            text/plain:
              schema:
                type: string
                example: Room ID is required
        '401':
          description: Not logged in
          content:
            text/plain:
              schema:
                type: string
                example: Not logged in
        '404':
          description: Session or room not found
          content:
            text/plain:
              schema:
                type: string
                example: Room not found
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
    post:
      summary: Create a new room
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name: { type: string, example: Test Room }
      responses:
        '201':
          description: Room created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  roomId: { type: string, example: mock-uuid }
                  name: { type: string, example: Test Room }
                  owner: { type: string, example: testuser }
        '401':
          description: Not logged in
          content:
            text/plain:
              schema:
                type: string
                example: Not logged in
        '404':
          description: Session not found
          content:
            text/plain:
              schema:
                type: string
                example: Session not found
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
  /api/rooms:
    get:
      summary: Get all rooms for the user
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Rooms retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    roomId: { type: string, example: mock-uuid }
                    name: { type: string, example: Test Room }
                    owner: { type: string, example: testuser }
        '401':
          description: Not logged in
          content:
            text/plain:
              schema:
                type: string
                example: Not logged in
        '404':
          description: Session not found
          content:
            text/plain:
              schema:
                type: string
                example: Session not found
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
  /api/image:
    post:
      summary: Upload an image
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: Image uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  key: { type: string, example: images/mock-uuid }
        '400':
          description: Invalid image format or no data
          content:
            text/plain:
              schema:
                type: string
                example: Invalid image format
        '401':
          description: Not logged in
          content:
            text/plain:
              schema:
                type: string
                example: Not logged in
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
  /api/messages:
    get:
      summary: Get messages for a room
      security:
        - cookieAuth: []
      parameters:
        - name: roomId
          in: query
          required: true
          schema:
            type: string
            example: mock-uuid
        - name: cursor
          in: query
          required: false
          schema:
            type: string
            example: cursor123
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageIds: { type: array, items: { type: string } }
                  nextCursor: { type: string, nullable: true }
        '400':
          description: Room ID is required
          content:
            text/plain:
              schema:
                type: string
                example: Room ID is required
        '401':
          description: Not logged in
          content:
            text/plain:
              schema:
                type: string
                example: Not logged in
        '404':
          description: Session not found
          content:
            text/plain:
              schema:
                type: string
                example: Session not found
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
  /api/message:
    get:
      summary: Get a specific message
      security:
        - cookieAuth: []
      parameters:
        - name: messageId
          in: query
          required: true
          schema:
            type: string
            example: mock-message-id
      responses:
        '200':
          description: Message retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: string, example: mock-message-id }
                  roomId: { type: string, example: mock-uuid }
                  role: { type: string, enum: [USER, ASSISTANT] }
                  text: { type: string, example: Hello! }
                  imageKey: { type: string, nullable: true }
        '400':
          description: Message ID is required
          content:
            text/plain:
              schema:
                type: string
                example: Message ID is required
        '401':
          description: Not logged in
          content:
            text/plain:
              schema:
                type: string
                example: Not logged in
        '404':
          description: Session or message not found
          content:
            text/plain:
              schema:
                type: string
                example: Message not found
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
    post:
      summary: Create a new message
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [roomId, content]
              properties:
                roomId: { type: string, example: mock-uuid }
                content: { type: string, example: Hello! }
                imageKey: { type: string, nullable: true, example: images/mock-uuid }
      responses:
        '200':
          description: Message created, returns AI response stream
          content:
            text/event-stream:
              schema:
                type: string
        '400':
          description: Room ID and content are required
          content:
            text/plain:
              schema:
                type: string
                example: Room ID and content are required
        '401':
          description: Not logged in
          content:
            text/plain:
              schema:
                type: string
                example: Not logged in
        '404':
          description: Session not found
          content:
            text/plain:
              schema:
                type: string
                example: Session not found
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionId
