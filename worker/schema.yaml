openapi: 3.0.3
info:
  title: Cloudflare Worker Chat API
  description: API for a chat application with user authentication, room management, messaging, and image upload capabilities.
  version: 1.0.0
servers:
  - url: https://{worker-name}.{subdomain}.workers.dev
    variables:
      worker-name:
        default: chat-api
      subdomain:
        default: example
paths:
  /api/register:
    options:
      summary: CORS preflight for user registration
      operationId: registerOptions
      responses:
        '204':
          description: No content
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: john_doe
                password:
                  type: string
                  format: password
                  example: securepassword123
      responses:
        '201':
          description: User registered successfully
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
          content:
            text/plain:
              schema:
                type: string
                example: User john_doe registered successfully
        '500':
          description: Internal server error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
  /api/session:
    options:
      summary: CORS preflight for session management
      operationId: sessionOptions
      responses:
        '204':
          description: No content
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, PUT, DELETE, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
    post:
      summary: Create a new session (login)
      operationId: createSession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: john_doe
                password:
                  type: string
                  format: password
                  example: securepassword123
      responses:
        '200':
          description: Session created successfully
          headers:
            Set-Cookie:
              schema:
                type: string
                example: sessionId=uuid; HttpOnly; Secure; SameSite=Strict
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, PUT, DELETE, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            text/plain:
              schema:
                type: string
                example: '{"sessionId":"uuid","username":"john_doe","ttl":3600}'
        '401':
          description: Invalid credentials
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, PUT, DELETE, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            text/plain:
              schema:
                type: string
                example: Invalid credentials
        '404':
          description: User not found
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, PUT, DELETE, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            text/plain:
              schema:
                type: string
                example: User not found
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
    delete:
      summary: Delete a session (logout)
      operationId: deleteSession
      parameters:
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
            example: sessionId=uuid
      responses:
        '200':
          description: Logout successful
          headers:
            Set-Cookie:
              schema:
                type: string
                example: sessionId=; HttpOnly; Secure; SameSite=Strict; Max-Age=0
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, PUT, DELETE, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            text/plain:
              schema:
                type: string
                example: Logout successful
        '401':
          description: Not logged in
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, PUT, DELETE, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            text/plain:
              schema:
                type: string
                example: Not logged in
        '500':
          description: Internal server error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, PUT, DELETE, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
    put:
      summary: Extend an existing session
      operationId: extendSession
      parameters:
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
            example: sessionId=uuid
      responses:
        '200':
          description: Session extended successfully
          headers:
            Set-Cookie:
              schema:
                type: string
                example: sessionId=uuid; HttpOnly; Secure; SameSite=Strict
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, PUT, DELETE, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                    example: uuid
                  username:
                    type: string
                    example: john_doe
                  ttl:
                    type: integer
                    example: 3600
        '401':
          description: Not logged in
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, PUT, DELETE, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            text/plain:
              schema:
                type: string
                example: Not logged in
        '500':
          description: Internal server error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'POST, PUT, DELETE, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
  /api/room:
    options:
      summary: CORS preflight for room operations
      operationId: roomOptions
      responses:
        '204':
          description: No content
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'GET, POST, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
    post:
      summary: Create a new room
      operationId: createRoom
      parameters:
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
            example: sessionId=uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: General Chat
      responses:
        '201':
          description: Room created successfully
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'GET, POST, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            application/json:
              schema:
                type: object
                properties:
                  roomId:
                    type: string
                    example: uuid
                  name:
                    type: string
                    example: General Chat
                  owner:
                    type: string
                    example: john_doe
        '401':
          description: Not logged in
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'GET, POST, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            text/plain:
              schema:
                type: string
                example: Not logged in
        '404':
          description: Session not found
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: 'GET, POST, OPTIONS'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: 'Content-Type'
            Access-Control-Allow-Credentials:
              schema:
                type: string
                example: 'true'
          content:
            text/plain:
              schema:
                type: string
                example: Session not found
        '500':
          description: Internal server error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string